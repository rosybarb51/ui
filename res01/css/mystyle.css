* { box-sizing: border-box; }

main::after {
    content: "";
    display: table;
    clear: both;
}
/* 속성 선택자 - 예전에 배운 거 찾아보자 */
/* [속성명 = "속성값"] - 해당하는 속성'값'과 동일할 경우 아래의 CSS 속성 적용  */
/* 
= : 속성값이 동일할 경우 적용
~= : 속성값이 포함된 경우 적용 (동일한 단어 기준)
|= : 속성값으로 시작하는 경우 적용 (단어로 시작하거나 단어- 일 경우 가능)
    예) class|="col" -> <h1 class="col>, <h1 class="col-abc> 
        가능
    예) class|="col" -> <h1 class="col abc> 
        불가능
^= : 속성값으로 시작하는 경우 적용 (문자열 기준. 문자열로 시작만 하면됨)
예) class|="col" -> <h1 class="col>, <h1 class="col-abc> 
        가능
    예) class|="col" -> <h1 class="col abc> 
        가능
$= : 속성값으로 끝나는 경우 적용 (문자열 기준)
*= : 속성값이 포함된 경우 적용 (문자열 기준)
*/

/* 속성 선택자를 사용, class*=col- 는 속성이 class이고 값이 col- 가 포함된 경우 적용 */
[class*="col-"] {
    float: left;
    padding: 15px;
}

header {
    background-color: #9933cc;
    color: white;
    padding: 15px;
}

main .menu ul{
    list-style-type: none;
    margin: 0;
    padding: 0;
}

main .menu li {
    padding: 8px;
    margin-bottom: 8px;
    background-color: #33b5b5;
    color: white;
    /* box-shadow : 좌우측그림자크기 상하측그림자크기 흐림정도 색상(투명도는 0.0~1.0), 쉼표 후 다중으로 그림자 여러 개 사용해도 됨 (그림자 효과가 중복해서 나온다)  */
    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 2px rgba(0, 0, 0, 0.24);
}

main .menu li:hover {
    background-color: #0099cc;
}

.right {
    background-color: #33b5b5;
    padding: 15px;
    color: white;
    text-align: center;
    font-size: 14px;
    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12) 0px 1px 2px rgba(0, 0, 0, 0.24);
}

footer {
    background-color: #0099cc;
    color: white;
    text-align: center;
    font-size: 12px;
    padding: 15px;
}

/* 스마트 폰 화면 */
/* 디바이스의 최소 너비가 600px 미만일 경우 아래의 CSS 속성 적용 */
/* 기본값으로 사용됨 ( 제일 위에 있어서 : 위에서 아래로 읽어가는 방식이니까..) */
[class*="col-"] { width: 100%; }

/* 테블릿 화면 */
/* 디바이스의 최소 너비가 600px까지는 아래의 CSS 속성 적용 */
@media only screen and (min-width: 600px) {
    .col-s-1 { width: 8.33%; }
    .col-s-2 { width: 16.66%; }
    .col-s-3 { width: 25%; }
    .col-s-4 { width: 33.33%; }
    .col-s-5 { width: 41.66%; }
    .col-s-6 { width: 50%; }
    .col-s-7 { width: 58.33%; }
    .col-s-8 { width: 66.66%; }
    .col-s-9 { width: 75%; }
    .col-s-10 { width: 83.33%; }
    .col-s-11 { width: 91.66%; }
    .col-s-12 { width: 100%; }
}

/* 데스크탑 화면 */
/* 미디어쿼리를 사용하여 디바이스의 화면 크기에 따라 CSS 속성을 변경하여 출력함 */
/* 그리드시스템의 일부분임. */
/* @media : 미디어쿼리를 사용한다는 의미 */
/* only : 조건을 사용한다는 의미. (안 써도 되지만 사용하자) only와 not 이 있는데, not은 사용하지 않는다는 의미 */
/* screen : 디바이스의 종류 */
/* and : 조건 추가 */
/* (min-width: 768px) : 디바이스의 최소 너비가 768px까지 아래의 CSS속성 적용 (-> 768px보다 클 경우) */
/* 보통은 min-width 보다 max-width 많이 사용한다. */
@media only screen and (min-width: 768px) {
    /* grid 시스템을 적용하여 화면의 너비를 설정한 내용 */
    /* grid 시스템 : 웹의 화면을 총 12개의 column으로 나누어서 화면을 디자인하는 방식 */
    .col-1 { width: 8.33%; }
    .col-2 { width: 16.66%; }
    .col-3 { width: 25%; }
    .col-4 { width: 33.33%; }
    .col-5 { width: 41.66%; }
    .col-6 { width: 50%; }
    .col-7 { width: 58.33%; }
    .col-8 { width: 66.66%; }
    .col-9 { width: 75%; }
    .col-10 { width: 83.33%; }
    .col-11 { width: 91.66%; }
    .col-12 { width: 100%; }
}


/* 미디어쿼리 적을 때 순서 중요하다. 만약 겹치는 범위가 있다면 위에서부터 아래로 내려올 수록 최신의 것으로 덮어서 저장한다. 위의 %들은 해당 선택자가 있으면 그것들에 적용되는 %인데, 만약 해당되는 %들의 합이 100%을 넘어가면 다음 줄로 넘어간다. */

/* 반응형 웹 : 디바이스의 화면 크기에 따라서 여러 가지 화면으로 변경되는 웹 사이트 구축 방식 */
/*  - 주로 미디어쿼리를 사용하여 화면 크기에 따라서 CSS 속성을 변경시켜 여러 가지 화면 크기의 사이트를 구축 */

/* 뷰포트(viewport) : 웹 페이지에서 사용자가 볼 수 있는 영역 */
/*  - 디바이스에 따라서 뷰포트는 다르며 컴퓨터 화면보다 스마트폰의 화면이 더 작음 (해상도를 뜻하는 것이 아님!) */
/*  - html5는 웹 디자이너가 meta 태그를 통해서 뷰포트를 설정할 수 있음 */
/*  - <meta name = "viewport" content = "width = device-width, initial-scale=1.0"> */
/*  - width-=device-width : 디바이스의 화면 너비로 현재 사이트의 너비를 설정 */
/*  - initial-scale=1.0 : 현재 화면의 확대/축소 수전, 1.0은 현재 화면의 크기를 100%로 사용함. 0.5는 축소, 2.0은 확대.. 이런 식 */

/*  미디어 쿼리 : 반응형 웹 사이트를 제작하는 데 필수적인 속성 */
/*  - 지정한 화면 크기에 따라서 CSS 속성을 다르게 사용할 수 있음 */
/*  - 미디어쿼리는 구형 브라우저에서는 동작하지 않을 수 있음 */
/*  사용법 */
/* @media not|only 미디어 타입 and (미디어쿼리 적용 옵션) {
   CSS 코드   
}
*/
/* not|only : only는 지정한 CSS 형식대로 사용하겠다는 의미. not은  지정한 CSS 형식의 반대로 사용하겠다는 의미 */
/* 미디어 타입 : all, print, screen, speech ..  더 많지만 이 네가지 정도만 알면되고, 실제로 사용하는 건 all, screen 밖에 없음 */
/* all : 기본값, 모든 디바이스에 적용 */
/* print : 각종 프린트 디바이스 */
/* screen : 컴퓨터 모니터, 테블릿 화면, 스마트폰 화면 등 각종 디바이스 화면 */
/* speech : 문자를 읽어주는 디바이스(TTS) */
/* 미디어쿼리 적용 옵션 : 주로 max-width, min-width를 사용 (웹 사이트 제작은 screen, all을 주로 사용) */

/* 각 디바이스 마다의 화면 설정 크기 (bootstrap 기준) */
/* extra small : 576px 미만  */
/* small : 576px ~ 767px */
/* medium : 768px ~ 991px */
/* large : 992px ~ 1199px */
/* extra large : 1200px 이상 */
